---
AWSTemplateFormatVersion: 2010-09-09
Transform: AWS::Serverless-2016-10-31

# Legends
# üìù Use your own values

Globals:
  Function:
    Runtime: python3.11
    Handler: app.lambda_handler
Parameters:
  RootDomain:
    Type: String
    Default: gustavomejia.tech
    Description: Root domain for the API Gateway

  SECRETTELEGRAMBOTTOKEN:
    Type: String
    Description: Telegram bot token

  SECRETCHATID:
    Type: String
    Description: Telegram chat id

Resources:
  # üü£ External Domain
  MyHostedDomain:
    Type: AWS::Route53::HostedZone
    Properties:
      Name: !Ref RootDomain

  # üî¥ SSL Certificate
  ACMCertificate:
    Type: AWS::CertificateManager::Certificate
    Properties:
      DomainName: !Sub "*.${RootDomain}"
      ValidationMethod: DNS
      DomainValidationOptions:
        - DomainName: !Sub "*.${RootDomain}"
          HostedZoneId: !Ref MyHostedDomain

  # üü£ Subdomain Api Gateway http api
  ExampleSubdomainApiGateway:
    Type: AWS::Serverless::HttpApi
    Properties:
      Name: !Sub "${AWS::StackName}-ExampleSubdomain"  # üìù
      StageName: Prod
      Domain:
        DomainName: !Sub "example.${RootDomain}"  # üìù
        CertificateArn: !Ref ACMCertificate
        EndpointConfiguration: REGIONAL
        Route53:
          HostedZoneId: !Ref MyHostedDomain

  # üü† Layers Libs/Utils/Etc
  LayerLibs:
    Type: AWS::Serverless::LayerVersion
    Properties:
      ContentUri: libs/
      LayerName: !Sub "${AWS::StackName}-Libs"
    Metadata:
      BuildMethod: python3.11


Outputs:
  HostedZoneNameServers:
    Description: "Please copy the name servers below to your DNS provider"
    Value: !Join [",", !GetAtt MyHostedDomain.NameServers]
  HostedZoneArn:
    Description: Please use this Id to create records
    Value: !GetAtt MyHostedDomain.Id
  StackInfo:
    Value:
      !Sub 'Stack name: ${AWS::StackName}, Id: ${AWS::StackId}'
...
